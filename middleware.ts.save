import { clerkMiddleware } from '@clerk/nextjs/server';import { clerkMiddleware, createRouteMatcher } from 
'@clerk/nextjs/server';

const isProtectedRoute = createRouteMatcher([ '/(protected)(.*)', '/dashboard(.*)', '/quotes(.*)', 
  '/import(.*)', '/search(.*)',
export default clerkMiddleware();]);

export default clerkMiddleware(async (auth, req) => { if (isProtectedRoute(req)) { export const config = { await 
auth.protect();
  matcher: [ } 
    '/((?!_next|[^?]*\\.(?:html?|css|js(?!on)|jpe?g|webp|png|gif|svg|ttf|woff2?|ico|csv|docx?|xlsx?|zip|webmanifest)).*)',}); 
    '/(api|trpc)(.*)',
  ],export const config = { matcher: [
};    // Skip Next.js internals and all static files, unless found in search params
cat tailwind.config.js 
'/((?!_next|[^?]*\\.(?:html?|css|js(?!on)|jpe?g|webp|png|gif|svg|ttf|woff2?|ico|csv|docx?|xlsx?|zip|webmanifest)).*)', 
module.exports = { // Always run for API routes
  content: [ '/(api|trpc)(.*)', ], './pages/**/*.{js,ts,jsx,tsx,mdx}',}; 
    './components/**/*.{js,ts,jsx,tsx,mdx}', './app/**/*.{js,ts,jsx,tsx,mdx}',
  ], theme: { extend: { colors: { border: "hsl(var(--border))", input: "hsl(var(--input))", ring: 
        "hsl(var(--ring))", background: "hsl(var(--background))", foreground: "hsl(var(--foreground))", primary: 
        {
          DEFAULT: "hsl(var(--primary))", foreground: "hsl(var(--primary-foreground))",
        },
        // ... other color definitions
      },
    },
  },
  plugins: [require("tailwindcss-animate")],
}
cat app/globals.css | head -50
